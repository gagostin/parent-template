version: '3.8'

services:

  rest-db:
    image: ${STACK_NAME}/rest-db
    build:
      context: docker/rest-db
    volumes:
      - rest-db-pgdata:/var/lib/postgresql/data
      - ./docker/rest-db/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/rest-db/resources/testdata.sql:/docker-entrypoint-initdb.d/testdata.sql
    env_file:
      - docker/rest-db/resources/rest-db.env
    ports:
      - ${STACK_OFFSET}01:5432

  rest:
    image: ${STACK_NAME}/rest
    build:
      context: rest
    env_file:
      - rest/docker/rest.env
    ports:
      - ${STACK_OFFSET}02:8080
      - ${STACK_OFFSET}03:8000
    links:
      - rest-db

  frontend:
    image: ${STACK_NAME}/frontend
    build:
      context: frontend
    ports:
    - ${STACK_OFFSET}04:80

  keycloak-db:
    image: postgres
    volumes:
      - keycloak-db-pgdata:/var/lib/postgresql/data
      - ./docker/keycloak-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - docker/keycloak-db/keycloak-db.env
    ports:
      - ${STACK_OFFSET}05:5432

  keycloak:
    image: jboss/keycloak
    env_file:
      - docker/keycloak/keycloak.env
    ports:
      - ${STACK_OFFSET}06:8080

  wordpress-db:
    image: mysql
    volumes:
      - wordpress-db-data:/var/lib/mysql
      - ./docker/wordpress-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    env_file:
      - docker/wordpress-db/wordpress-db.env
    ports:
      - ${STACK_OFFSET}07:5432

  wordpress:
    image: wordpress:latest
    volumes:
      - wordpress-data:/var/www/html
    ports:
      - ${STACK_OFFSET}08:80
    env_file:
      - docker/wordpress/wordpress.env

volumes:
  keycloak-db-pgdata: {}
  rest-db-pgdata: {}
  wordpress-db-data: {}
  wordpress-data: {}